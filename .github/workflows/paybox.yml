name: Postman Test and Allure Report

on:
  push:
    branches:
      - main
    paths:
      - 'Postman-Collections/Postman-Collections.json'
  schedule:
    - cron: '30 18 * * 3' # Runs every Wednesday at 7:30pm
    - cron: '30 18 * * 5' # Runs every Friday at 7:30pm
    - cron: '0 20 * * 0' # Runs every Sunday at 8:00pm

jobs:
  run_tests:
    if: github.event_name == 'schedule' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install newman and newman-reporter-allure
        run: |
          npm install -g newman newman-reporter-allure
          echo "Newman and newman-reporter-allure installed."

      - name: Run Postman tests
        if: always()
        continue-on-error: true
        run: |
          newman run Postman-Collections/Postman-Collections.json --reporters cli,allure
          echo "Postman tests run."

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          repository: ${{ github.repository }}
          ref: gh-pages
          path: gh-pages

      - name: Copy existing content to allure-history
        run: |
          mkdir -p allure-history
          if [ -d gh-pages ]; then
            cp -r gh-pages/* allure-history/
          fi

      - name: Allure report action
        id: build
        uses: simple-elf/allure-report-action@master
        if: always()
        continue-on-error: true
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

  #    - name: Wait before deploying to GitHub Pages
  #      if: always()
  #      run: sleep 100

  #    - name: Deploy report to GitHub Pages
  #      id: deploy
  #      if: always()
  #      uses: peaceiris/actions-gh-pages@v2
  #      env:
  #        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #        PUBLISH_BRANCH: gh-pages
  #        PUBLISH_DIR: allure-history

      - name: Wait for Allure report to be generated
        if: always()
        continue-on-error: true
        run: sleep 30

      - name: Find latest folder in gh-pages
        id: new_folder
        run: |
          latest_folder=$(find allure-history -mindepth 1 -maxdepth 1 -type d -name '[0-9]*' | sort -n | tail -n 1)
          latest_folder_number=$(basename $latest_folder)
          echo "Latest Folder Number: $latest_folder_number"
          echo "::set-output name=latest_folder_number::$latest_folder_number"

      - name: Parse latest summary.json
        id: parse_latest_json
        run: |
          latest_folder_number=${{ steps.new_folder.outputs.latest_folder_number }}
          latest_summary_path="allure-history/${latest_folder_number}/widgets/summary.json"
          echo "Latest Summary Path: $latest_summary_path"
          if [ -f "$latest_summary_path" ]; then
            cat "$latest_summary_path"
            passed_tests=$(jq -r '.statistic.passed' "$latest_summary_path")
            failed_tests=$(jq -r '.statistic.failed' "$latest_summary_path")
            total_tests=$((passed_tests + failed_tests))
            if [ "$total_tests" -gt 0 ]; then
              passing_percentage=$(( passed_tests * 100 / total_tests ))
              failing_percentage=$(( failed_tests * 100 / total_tests ))
            else
              passing_percentage=0
              failing_percentage=0
            fi
            echo "Passed Tests: $passed_tests"
            echo "Failed Tests: $failed_tests"
            echo "Passing Percentage: $passing_percentage%"
            echo "Failing Percentage: $failing_percentage%"
            echo "::set-output name=passing_percentage::$passing_percentage"
            echo "::set-output name=failing_percentage::$failing_percentage"
            echo "::set-output name=passed_tests::$passed_tests"
            echo "::set-output name=failed_tests::$failed_tests"
          else
            echo "summary.json not found"
            echo "::set-output name=passing_percentage::0"
            echo "::set-output name=failing_percentage::0"
            echo "::set-output name=passed_tests::0"
            echo "::set-output name=failed_tests::0"
          fi
      
